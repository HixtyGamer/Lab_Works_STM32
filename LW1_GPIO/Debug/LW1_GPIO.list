
LW1_GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ac  080001d8  080001d8  000101d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  4 .ARM          00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000384  08000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000388  08000388  00010388  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmsram      00000000  10000000  10000000  0001038c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001038c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008df  00000000  00000000  000103bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001a5  00000000  00000000  00010c9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a0  00000000  00000000  00010e40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000088  00000000  00000000  00010ee0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a7e7  00000000  00000000  00010f68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000b48  00000000  00000000  0002b74f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009b7df  00000000  00000000  0002c297  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000c7a76  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001c0  00000000  00000000  000c7acc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	; (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	; (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	; (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000000 	.word	0x20000000
 80001f4:	00000000 	.word	0x00000000
 80001f8:	0800036c 	.word	0x0800036c

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	; (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	; (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	; (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000004 	.word	0x20000004
 8000214:	0800036c 	.word	0x0800036c

08000218 <main>:
void cr_taskA();
void cr_taskB();
void cr_taskB2();

int main(void)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	af00      	add	r7, sp, #0
	task_1();
 800021c:	f000 f804 	bl	8000228 <task_1>
 8000220:	2300      	movs	r3, #0
	//cr_task4();
	//cr_taskA();
	//cr_taskB();
	//cr_taskB2();

}
 8000222:	4618      	mov	r0, r3
 8000224:	bd80      	pop	{r7, pc}
	...

08000228 <task_1>:

void task_1()
{
 8000228:	b580      	push	{r7, lr}
 800022a:	af00      	add	r7, sp, #0
	RCC->AHB2ENR |= RCC_AHB2ENR_GPIODEN | RCC_AHB2ENR_GPIOEEN;
 800022c:	4b19      	ldr	r3, [pc, #100]	; (8000294 <task_1+0x6c>)
 800022e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000230:	4a18      	ldr	r2, [pc, #96]	; (8000294 <task_1+0x6c>)
 8000232:	f043 0318 	orr.w	r3, r3, #24
 8000236:	64d3      	str	r3, [r2, #76]	; 0x4c

	GPIOD->MODER &= ~(GPIO_MODER_MODE9_Msk);
 8000238:	4b17      	ldr	r3, [pc, #92]	; (8000298 <task_1+0x70>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a16      	ldr	r2, [pc, #88]	; (8000298 <task_1+0x70>)
 800023e:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8000242:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 1 << GPIO_MODER_MODE9_Pos;
 8000244:	4b14      	ldr	r3, [pc, #80]	; (8000298 <task_1+0x70>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a13      	ldr	r2, [pc, #76]	; (8000298 <task_1+0x70>)
 800024a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800024e:	6013      	str	r3, [r2, #0]

	GPIOE->MODER &= ~(GPIO_MODER_MODE7_Msk);
 8000250:	4b12      	ldr	r3, [pc, #72]	; (800029c <task_1+0x74>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a11      	ldr	r2, [pc, #68]	; (800029c <task_1+0x74>)
 8000256:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800025a:	6013      	str	r3, [r2, #0]
	GPIOE->MODER |= 1 << GPIO_MODER_MODE7_Pos;
 800025c:	4b0f      	ldr	r3, [pc, #60]	; (800029c <task_1+0x74>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a0e      	ldr	r2, [pc, #56]	; (800029c <task_1+0x74>)
 8000262:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000266:	6013      	str	r3, [r2, #0]

	GPIOD->ODR |= GPIO_ODR_OD9;
 8000268:	4b0b      	ldr	r3, [pc, #44]	; (8000298 <task_1+0x70>)
 800026a:	695b      	ldr	r3, [r3, #20]
 800026c:	4a0a      	ldr	r2, [pc, #40]	; (8000298 <task_1+0x70>)
 800026e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000272:	6153      	str	r3, [r2, #20]

	while(1)
	{
		dumb_delay(1000000);
 8000274:	480a      	ldr	r0, [pc, #40]	; (80002a0 <task_1+0x78>)
 8000276:	f000 f815 	bl	80002a4 <dumb_delay>

	    GPIOD->ODR ^= GPIO_ODR_OD9;
 800027a:	4b07      	ldr	r3, [pc, #28]	; (8000298 <task_1+0x70>)
 800027c:	695b      	ldr	r3, [r3, #20]
 800027e:	4a06      	ldr	r2, [pc, #24]	; (8000298 <task_1+0x70>)
 8000280:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8000284:	6153      	str	r3, [r2, #20]
	    GPIOE->ODR ^= GPIO_ODR_OD7;
 8000286:	4b05      	ldr	r3, [pc, #20]	; (800029c <task_1+0x74>)
 8000288:	695b      	ldr	r3, [r3, #20]
 800028a:	4a04      	ldr	r2, [pc, #16]	; (800029c <task_1+0x74>)
 800028c:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000290:	6153      	str	r3, [r2, #20]
		dumb_delay(1000000);
 8000292:	e7ef      	b.n	8000274 <task_1+0x4c>
 8000294:	40021000 	.word	0x40021000
 8000298:	48000c00 	.word	0x48000c00
 800029c:	48001000 	.word	0x48001000
 80002a0:	000f4240 	.word	0x000f4240

080002a4 <dumb_delay>:
		}
	}
}

void dumb_delay(uint32_t duration)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b085      	sub	sp, #20
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0; i < duration; i++);
 80002ac:	2300      	movs	r3, #0
 80002ae:	60fb      	str	r3, [r7, #12]
 80002b0:	e002      	b.n	80002b8 <dumb_delay+0x14>
 80002b2:	68fb      	ldr	r3, [r7, #12]
 80002b4:	3301      	adds	r3, #1
 80002b6:	60fb      	str	r3, [r7, #12]
 80002b8:	68fa      	ldr	r2, [r7, #12]
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	429a      	cmp	r2, r3
 80002be:	d3f8      	bcc.n	80002b2 <dumb_delay+0xe>
}
 80002c0:	bf00      	nop
 80002c2:	bf00      	nop
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr
	...

080002d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d0:	480d      	ldr	r0, [pc, #52]	; (8000308 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d8:	480c      	ldr	r0, [pc, #48]	; (800030c <LoopForever+0x6>)
  ldr r1, =_edata
 80002da:	490d      	ldr	r1, [pc, #52]	; (8000310 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002dc:	4a0d      	ldr	r2, [pc, #52]	; (8000314 <LoopForever+0xe>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e0:	e002      	b.n	80002e8 <LoopCopyDataInit>

080002e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e6:	3304      	adds	r3, #4

080002e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002ec:	d3f9      	bcc.n	80002e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ee:	4a0a      	ldr	r2, [pc, #40]	; (8000318 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f0:	4c0a      	ldr	r4, [pc, #40]	; (800031c <LoopForever+0x16>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f4:	e001      	b.n	80002fa <LoopFillZerobss>

080002f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f8:	3204      	adds	r2, #4

080002fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002fc:	d3fb      	bcc.n	80002f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fe:	f000 f811 	bl	8000324 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000302:	f7ff ff89 	bl	8000218 <main>

08000306 <LoopForever>:

LoopForever:
    b LoopForever
 8000306:	e7fe      	b.n	8000306 <LoopForever>
  ldr   r0, =_estack
 8000308:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800030c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000310:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000314:	0800038c 	.word	0x0800038c
  ldr r2, =_sbss
 8000318:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800031c:	2000001c 	.word	0x2000001c

08000320 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000320:	e7fe      	b.n	8000320 <ADC1_2_IRQHandler>
	...

08000324 <__libc_init_array>:
 8000324:	b570      	push	{r4, r5, r6, lr}
 8000326:	4d0d      	ldr	r5, [pc, #52]	; (800035c <__libc_init_array+0x38>)
 8000328:	4c0d      	ldr	r4, [pc, #52]	; (8000360 <__libc_init_array+0x3c>)
 800032a:	1b64      	subs	r4, r4, r5
 800032c:	10a4      	asrs	r4, r4, #2
 800032e:	2600      	movs	r6, #0
 8000330:	42a6      	cmp	r6, r4
 8000332:	d109      	bne.n	8000348 <__libc_init_array+0x24>
 8000334:	4d0b      	ldr	r5, [pc, #44]	; (8000364 <__libc_init_array+0x40>)
 8000336:	4c0c      	ldr	r4, [pc, #48]	; (8000368 <__libc_init_array+0x44>)
 8000338:	f000 f818 	bl	800036c <_init>
 800033c:	1b64      	subs	r4, r4, r5
 800033e:	10a4      	asrs	r4, r4, #2
 8000340:	2600      	movs	r6, #0
 8000342:	42a6      	cmp	r6, r4
 8000344:	d105      	bne.n	8000352 <__libc_init_array+0x2e>
 8000346:	bd70      	pop	{r4, r5, r6, pc}
 8000348:	f855 3b04 	ldr.w	r3, [r5], #4
 800034c:	4798      	blx	r3
 800034e:	3601      	adds	r6, #1
 8000350:	e7ee      	b.n	8000330 <__libc_init_array+0xc>
 8000352:	f855 3b04 	ldr.w	r3, [r5], #4
 8000356:	4798      	blx	r3
 8000358:	3601      	adds	r6, #1
 800035a:	e7f2      	b.n	8000342 <__libc_init_array+0x1e>
 800035c:	08000384 	.word	0x08000384
 8000360:	08000384 	.word	0x08000384
 8000364:	08000384 	.word	0x08000384
 8000368:	08000388 	.word	0x08000388

0800036c <_init>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr

08000378 <_fini>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr
